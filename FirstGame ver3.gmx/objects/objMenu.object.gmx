<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMenu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INITIAL VARIABLES
cursor_sprite = sprCursor;
instance_create (0, 0, objTransitionOut);
currOption = 0;


audio_stop_all();
audio_play_sound(sndMenu,1,true);

auxSpriteImage = 0;

randomize();
global.roomChange=0;
global.difficulty=0;
global.roomCount=0;
global.reroll=2;
global.rerollCount=0;
global.newRoom=0;

global.hpPlayer=5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tutorial
room_goto(roomTutorial);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Exit
game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Credits
room_goto(roomCredits);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start game
room_goto(room_A);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menu
if (keyboard_check_released(vk_enter) || mouse_check_button_released(mb_left))
{
    // react to etner key being released
    audio_play_sound(sndMenuEnter,1,false);
    switch (currOption)
    {
    case 0:
        instance_create (0, 0, objTransitionIn);
        alarm[0] = 30;
        break;
    case 1:
        instance_create (0, 0, objTransitionIn);
        alarm[3] = 30;
        break;
    case 2:
        instance_create (0, 0, objTransitionIn);
        alarm[1] = 30;
        break;
    case 3:
        instance_create (0, 0, objTransitionIn);
        alarm[2] = 30;
        break;
    default:
        show_message("this option is not avaiable");
        break;
    }
}
if (keyboard_check_released(vk_up))
{
    // react to up key being released
    audio_play_sound(sndMenuSelect,1,false);
    currOption = currOption - 1;
    if(currOption&lt;0)
    {
        currOption = 3;
    }
}
else if (keyboard_check_released(vk_down))
{
    // react to down key being released
    audio_play_sound(sndMenuSelect,1,false);
    currOption = (currOption + 1)%4;
}
else if (mouse_x &gt; 310 &amp;&amp; mouse_x &lt; 460)
{
    if (mouse_y &gt; 189 &amp;&amp; mouse_y &lt; 241)
    {
        if (currOption != 0) audio_play_sound(sndMenuSelect,1,false);
        currOption = 0;
    }
    else if (mouse_y &gt; 241 &amp;&amp; mouse_y &lt; 290)
    {
        if (currOption != 1) audio_play_sound(sndMenuSelect,1,false);
        currOption = 1;
    }
    else if (mouse_y &gt; 290 &amp;&amp; mouse_y &lt; 354)
    {
        if (currOption != 2) audio_play_sound(sndMenuSelect,1,false);
        currOption = 2;
    }
    else if (mouse_y &gt; 354 &amp;&amp; mouse_y &lt; 417)
    {
        if (currOption != 3 ) audio_play_sound(sndMenuSelect,1,false);
        currOption = 3;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// always draw ourselves
draw_self();
// calculate the position for the arrow
arrowX = x + 288;
arrowY = y + 192 + currOption * 64;
auxSpriteImage = (auxSpriteImage+1)%6;
draw_sprite(sprMenuSelector, auxSpriteImage, arrowX, arrowY);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
