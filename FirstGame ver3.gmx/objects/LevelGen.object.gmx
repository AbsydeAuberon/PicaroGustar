<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create the level
//Resize the room
room_width = (CELL_WIDTH /16)*384;
room_height = (CELL_HEIGHT/16)*240;

//Set the grid width and height
/*var width = 736 div CELL_WIDTH; 
var height = 416 div CELL_HEIGHT;
var stWidth = 64 div CELL_HEIGHT;
var stHeight = 96 div CELL_HEIGHT;*/

var width = room_width div CELL_WIDTH;
var height = room_width div CELL_HEIGHT;
var stWidth = 0;
var stHeight = 0;

//Create the grid
grid = ds_grid_create(width-stWidth, height-stHeight);

//Fill the grid with the void
ds_grid_set_region(grid, stWidth, stHeight, width-1, height-1, VOID);

//Randomize the world
randomize();

//Create the controller in the center of the grid
var controllerX = width div 2;
var controllerY = height div 2;

//Give the controller a random direction
var controllerDir = irandom(3);

//The odds variable for changing direction
var odds = 1;

//Create the level using 1000 steps;
repeat (1000) 
{
    //Place a floor tile the controller position
    grid [# controllerX, controllerY] = FLOOR;
    
    //Randomize the direction of the controller
    if (irandom(odds) == odds)
    {
        controllerDir = irandom(3);
    }
    //Move the controller
    var xDir = lengthdir_x(1,controllerDir*90);
    var yDir = lengthdir_y(1,controllerDir*90);
    controllerX += xDir;
    controllerY += yDir;
    
    //Make sure we don't move outside the grid
    controllerX = clamp(controllerX, 4, width-2);
    controllerY = clamp(controllerY, 5, height-2);
}

//Add the walls
for (var yy = 1; yy &lt; height-1; ++yy)
{
    for (var xx = 1; xx &lt; width-1; ++xx)
    {
        if (grid[# xx, yy] == FLOOR) 
        {
            //Check for walls
            if (grid[# xx+1, yy] != FLOOR) 
                grid[# xx+1, yy] = WALL;
            if (grid[# xx-1, yy] != FLOOR) 
                grid[# xx-1, yy] = WALL;
            if (grid[# xx, yy+1] != FLOOR) 
                grid[# xx, yy+1] = WALL;
            if (grid[# xx, yy-1] != FLOOR) 
                grid[# xx, yy-1] = WALL;
        }
    }
}

//Draw the level using the grid
for (var yy = 0; yy &lt; height; ++yy)
{
    for (var xx = 0; xx &lt; width; ++xx)
    {
        if (grid[# xx, yy] == FLOOR) 
        {
            //Draw the floor
            tile_add(bgFloor, 0, 0, CELL_WIDTH, CELL_HEIGHT, xx*CELL_WIDTH, yy*CELL_HEIGHT, 0);
        }
        else if (grid[# xx, yy] == WALL) 
        {
            //Draw the wall
            tile_add(bgWall, 0, 0, CELL_WIDTH, CELL_HEIGHT, xx*CELL_WIDTH, yy*CELL_HEIGHT, 0);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Restart the room (for debbugging)
if (keyboard_check_pressed(vk_space))
{
    room_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
